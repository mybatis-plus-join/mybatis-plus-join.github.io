import{_ as a,c as s,o as n,d as e}from"./app-D1R63mc8.js";const t={},p=e(`<h1 id="链式调用" tabindex="-1"><a class="header-anchor" href="#链式调用"><span>链式调用</span></a></h1><p>通过wrapper直接查询 参考MP的 LambdaQueryChainWrapper</p><h2 id="one" tabindex="-1"><a class="header-anchor" href="#one"><span>one()</span></a></h2><p>返回一个主表实体</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">User</span> user <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="one-xxx-class" tabindex="-1"><a class="header-anchor" href="#one-xxx-class"><span>one(xxx.class)</span></a></h2><p>返回一个自定义的实体</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">UserDTO</span> dtp <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">UserDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="first" tabindex="-1"><a class="header-anchor" href="#first"><span>first()</span></a></h2><p>返回第一个主表实体（先调用list，再取第一个）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">User</span> user <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="first-xxx-class" tabindex="-1"><a class="header-anchor" href="#first-xxx-class"><span>first(xxx.class)</span></a></h2><p>返回第一个自定义的实体（先调用list，再取第一个）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">UserDTO</span> dtp <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token class-name">UserDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="list" tabindex="-1"><a class="header-anchor" href="#list"><span>list()</span></a></h2><p>返回主表实体的List</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="list-xxx-class" tabindex="-1"><a class="header-anchor" href="#list-xxx-class"><span>list(xxx.class)</span></a></h2><p>返回自定义实体的List</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDTO</span><span class="token punctuation">&gt;</span></span> dtoList <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">UserDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="page-page" tabindex="-1"><a class="header-anchor" href="#page-page"><span>page(page)</span></a></h2><p>分页查询主表</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="page-page-xxx-class" tabindex="-1"><a class="header-anchor" href="#page-page-xxx-class"><span>page(page, xxx.class)</span></a></h2><p>分页查询自定义实体类</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">  <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDTO</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">UserDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,26),l=[p];function c(i,o){return n(),s("div",null,l)}const u=a(t,[["render",c],["__file","chain.html.vue"]]),d=JSON.parse('{"path":"/pages/core/logic/chain.html","title":"链式调用","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"one()","slug":"one","link":"#one","children":[]},{"level":2,"title":"one(xxx.class)","slug":"one-xxx-class","link":"#one-xxx-class","children":[]},{"level":2,"title":"first()","slug":"first","link":"#first","children":[]},{"level":2,"title":"first(xxx.class)","slug":"first-xxx-class","link":"#first-xxx-class","children":[]},{"level":2,"title":"list()","slug":"list","link":"#list","children":[]},{"level":2,"title":"list(xxx.class)","slug":"list-xxx-class","link":"#list-xxx-class","children":[]},{"level":2,"title":"page(page)","slug":"page-page","link":"#page-page","children":[]},{"level":2,"title":"page(page, xxx.class)","slug":"page-page-xxx-class","link":"#page-page-xxx-class","children":[]}],"git":{"updatedTime":1723941672000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":2}]},"filePathRelative":"pages/core/logic/chain.md"}');export{u as comp,d as data};
