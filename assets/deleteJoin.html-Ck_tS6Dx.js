import{_ as e,c as p,a as n,e as t,b as l,d as o,o as c,r as i}from"./app-D2Y642gS.js";const r={},u={id:"deletejoin",tabindex:"-1"},d={class:"header-anchor",href:"#deletejoin"};function k(m,s){const a=i("Badge");return c(),p("div",null,[s[1]||(s[1]=n("h1",{id:"连表删除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#连表删除"},[n("span",null,"连表删除")])],-1)),n("h2",u,[n("a",d,[n("span",null,[s[0]||(s[0]=t("deleteJoin ")),l(a,{type:"tip",text:"1.4.5+",vertical:"top"})])])]),s[2]||(s[2]=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 根据 Wrapper 条件，连表删除</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">wrapper</span> joinWrapper</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">deleteJoin</span><span class="token punctuation">(</span><span class="token class-name">MPJBaseJoin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意事项:</p><p>连表删除支持MP的逻辑删除<br> 如果使用了MP的逻辑删除, 调用deleteJoin会执行Update语句</p></div><h2 id="wrapper连表删除-删除主表" tabindex="-1"><a class="header-anchor" href="#wrapper连表删除-删除主表"><span>wrapper连表删除(删除主表)</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * wrapper连表删除(删除主表)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">DeleteJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AreaDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AreaDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getAreaId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">deleteJoin</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应log</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span>  Preparing: <span class="token keyword">DELETE</span></span>
<span class="line">t <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> t <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> address t1 <span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> area t2 <span class="token keyword">ON</span> <span class="token punctuation">(</span>t2<span class="token punctuation">.</span>id <span class="token operator">=</span> t1<span class="token punctuation">.</span>area_id<span class="token punctuation">)</span> <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> ?<span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters: <span class="token number">1</span><span class="token punctuation">(</span><span class="token keyword">Integer</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">&lt;=</span><span class="token operator">=</span>    Updates: <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wrapper连表删除-删除全部表" tabindex="-1"><a class="header-anchor" href="#wrapper连表删除-删除全部表"><span>wrapper连表删除(删除全部表)</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * wrapper连表删除(删除全部表)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">DeleteJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//删除全部的表数据 (主表和副表)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//也可以删除指定的表数据,调用 delete() 传要删除的实体类class 如下</span></span>
<span class="line">                <span class="token comment">//.delete(UserDO.class, AddressDO.class, AreaDO.class)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AreaDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AreaDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getAreaId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">deleteJoin</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-log line-numbers-mode" data-highlighter="prismjs" data-ext="log" data-title="log"><pre class="language-log"><code><span class="line"><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span>  Preparing<span class="token operator">:</span> DELETE t<span class="token punctuation">,</span>t1<span class="token punctuation">,</span>t2 FROM \`user\` t LEFT JOIN address t1 ON <span class="token operator">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token operator">)</span> LEFT JOIN area t2 ON <span class="token operator">(</span>t2<span class="token punctuation">.</span>id <span class="token operator">=</span> t1<span class="token punctuation">.</span>area_id<span class="token operator">)</span> WHERE <span class="token operator">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token operator">?</span><span class="token operator">)</span></span>
<span class="line"><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">(</span>Integer<span class="token operator">)</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span>    Updates<span class="token operator">:</span> <span class="token number">19</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意事项:</p><p>还是关于MP逻辑删除问题<br> MPJ支持都是物理删除或者都是逻辑删除, 不支持既有物理删除也有逻辑删除</p><p>比如: 有 tableA 和 tableB 两张表需要连表删除</p><p>支持 tableA(物理)、tableB(物理)<br> 支持 tableA(逻辑)、tableB(逻辑)</p><p>不支持 tableA(物理)、tableB(逻辑)<br> 不支持 tableA(逻辑)、tableB(物理)</p></div>`,11))])}const b=e(r,[["render",k],["__file","deleteJoin.html.vue"]]),g=JSON.parse('{"path":"/pages/core/api/deleteJoin.html","title":"连表删除","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"deleteJoin","slug":"deletejoin","link":"#deletejoin","children":[]},{"level":2,"title":"wrapper连表删除(删除主表)","slug":"wrapper连表删除-删除主表","link":"#wrapper连表删除-删除主表","children":[]},{"level":2,"title":"wrapper连表删除(删除全部表)","slug":"wrapper连表删除-删除全部表","link":"#wrapper连表删除-删除全部表","children":[]}],"git":{"updatedTime":1724150898000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":2}]},"filePathRelative":"pages/core/api/deleteJoin.md"}');export{b as comp,g as data};
