import{_ as c,c as o,a as s,e as a,b as p,d as t,w as u,r as l,o as r}from"./app-6LXgrC7W.js";const d={},k={class:"custom-container tip"};function v(m,n){const e=l("Badge"),i=l("RouteLink");return r(),o("div",null,[n[6]||(n[6]=s("h1",{id:"注解映射",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#注解映射"},[s("span",null,"注解映射")])],-1)),n[7]||(n[7]=s("h2",{id:"介绍-entitymapping-fieldmapping",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#介绍-entitymapping-fieldmapping"},[s("span",null,"介绍 @EntityMapping, @FieldMapping")])],-1)),s("p",null,[n[0]||(n[0]=a("@EntityMapping和@FieldMapping两个注解早在 ")),p(e,{type:"tip",text:"1.2.0",vertical:"top"}),n[1]||(n[1]=a(" 版本就已经发布 , ")),p(e,{type:"tip",text:"1.4.5",vertical:"top"}),n[2]||(n[2]=a(" 对这两个注解进行了小升级"))]),n[8]||(n[8]=t(`<h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p>修改service</p><p>注解查询的调用方式由之前的Mapper层改成了Service层<br> 修改service, service由MP的IService&lt;T&gt; 改为 MPJDeepService&lt;T&gt;<br> MPJDeepService&lt;T&gt; 继承MP的IService&lt;T&gt; ,所以改了不会对原有代码产生影响</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">MPJDeepService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>添加注解</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDO</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@TableId</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> pid<span class="token punctuation">;</span><span class="token comment">//父id</span></span>
<span class="line">    <span class="token comment">/* 其他属性略 */</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询上级 一对一</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token string">&quot;pid&quot;</span><span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDO</span> parentUser<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询下级 一对多</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token string">&quot;pid&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> childUser<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 带条件的查询下级 一对多</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token string">&quot;pid&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            condition <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">//sex = &#39;0&#39; 默认条件是等于</span></span>
<span class="line">                    <span class="token annotation punctuation">@Condition</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token comment">//name like &#39;%a%&#39;</span></span>
<span class="line">                    <span class="token annotation punctuation">@Condition</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> keyWord <span class="token operator">=</span> <span class="token class-name">SqlKeyword</span><span class="token punctuation">.</span><span class="token constant">LIKE</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            apply <span class="token operator">=</span> <span class="token annotation punctuation">@Apply</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;id between 1 and 20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//拼接sql 同 wrapper.apply()</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> childUserCondition<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询地址 (一对多)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddressDO</span><span class="token punctuation">&gt;</span></span> addressList<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 绑定字段 （一对多）</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@FieldMapping</span><span class="token punctuation">(</span>tag <span class="token operator">=</span> <span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> thisField <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token string">&quot;pid&quot;</span><span class="token punctuation">,</span> select <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> childIds<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),s("div",k,[n[5]||(n[5]=s("p",{class:"custom-container-title"},"TIP",-1)),s("p",null,[n[4]||(n[4]=a("可以使用 lombok 的 @FieldNameConstants 注解生成字段常量 ")),p(i,{to:"/pages/core/mapping/az.html#lombok%E4%BC%98%E5%8C%96%E6%B3%A8%E8%A7%A3%E5%86%99%E6%B3%95"},{default:u(()=>n[3]||(n[3]=[a("lombok优化")])),_:1})])]),n[9]||(n[9]=t(`<p>调用</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 一对一，一对多关系映射查询</span>
<span class="line"> * 以Deep结尾的方法会进行映射查询</span>
<span class="line"> * 如果不需要关系映射就使用mybatis plus原生方法即可，比如 getById listByIds 等</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> * 注意：关系映射不会去关联查询，而是执行多次单表查询（对结果汇总后使用in语句查询,再对结果进行匹配）</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@SpringBootTest</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MappingTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">UserDO</span> uesr <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getByIdDeep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deep<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">listDeep</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">pageDeep</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意事项</p><p>映射查询默认只查询两层<br> 比如: user -&gt; 上级user -&gt; 停止(不会继续查询上级user的上级user)<br> 开启多级查询, 添加第二个参数(不建议在父子关系表中使用, 可能会造成死循环)</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">userService<span class="token punctuation">.</span><span class="token function">listDeep</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf <span class="token operator">-&gt;</span> conf<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="lombok优化注解写法" tabindex="-1"><a class="header-anchor" href="#lombok优化注解写法"><span>lombok优化注解写法</span></a></h2><p>在实体类上添加 @FieldNameConstants 注解</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p><a href="https://projectlombok.org/features/experimental/FieldNameConstants" target="_blank" rel="noopener noreferrer">lombok FieldNameConstants注解文档</a></p></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token annotation punctuation">@FieldNameConstants</span></span>
<span class="line"><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDO</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@TableId</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> pid<span class="token punctuation">;</span><span class="token comment">//父id</span></span>
<span class="line">    <span class="token comment">/* 其他属性略 */</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询上级 一对一</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>pid<span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDO</span> parentUser<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询下级 一对多</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>pid<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> childUser<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 带条件的查询下级 一对多</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>pid<span class="token punctuation">,</span></span>
<span class="line">            condition <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">//sex = &#39;0&#39; 默认条件是等于</span></span>
<span class="line">                    <span class="token annotation punctuation">@Condition</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>sex<span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token comment">//name like &#39;%a%&#39;</span></span>
<span class="line">                    <span class="token annotation punctuation">@Condition</span><span class="token punctuation">(</span>column <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> keyWord <span class="token operator">=</span> <span class="token class-name">SqlKeyword</span><span class="token punctuation">.</span><span class="token constant">LIKE</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            apply <span class="token operator">=</span> <span class="token annotation punctuation">@Apply</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;id between 1 and 20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//拼接sql 同 wrapper.apply()</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> childUserCondition<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询地址 (一对多)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@EntityMapping</span><span class="token punctuation">(</span>thisField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token class-name">UserAddressDO<span class="token punctuation">.</span>Fields</span><span class="token punctuation">.</span>userId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddressDO</span><span class="token punctuation">&gt;</span></span> addressList<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 绑定字段 （一对多）</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@FieldMapping</span><span class="token punctuation">(</span>tag <span class="token operator">=</span> <span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> thisField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> joinField <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>pid<span class="token punctuation">,</span> select <span class="token operator">=</span> <span class="token class-name">Fields</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> childIds<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const g=c(d,[["render",v],["__file","intro.html.vue"]]),y=JSON.parse('{"path":"/pages/core/mapping/intro.html","title":"注解映射","lang":"en-US","frontmatter":{"tags":["@EntityMapping","@FieldMapping","MPJDeepService","thisField","joinField"]},"headers":[{"level":2,"title":"介绍 @EntityMapping, @FieldMapping","slug":"介绍-entitymapping-fieldmapping","link":"#介绍-entitymapping-fieldmapping","children":[{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"lombok优化注解写法","slug":"lombok优化注解写法","link":"#lombok优化注解写法","children":[]}],"git":{"updatedTime":1726959355000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":1}]},"filePathRelative":"pages/core/mapping/intro.md"}');export{g as comp,y as data};
