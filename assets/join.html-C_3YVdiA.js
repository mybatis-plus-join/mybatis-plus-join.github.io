import{_ as n,c as a,d as e,o as t}from"./app-DnVAHBDb.js";const p={};function o(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="自定义关键词连接-join" tabindex="-1"><a class="header-anchor" href="#自定义关键词连接-join"><span>自定义关键词连接 join</span></a></h1><h2 id="以-full-join-为例" tabindex="-1"><a class="header-anchor" href="#以-full-join-为例"><span>以 full join 为例</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;FULL JOIN&quot;</span><span class="token punctuation">,</span> <span class="token class-name">UserAddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> on <span class="token operator">-&gt;</span> on</span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserAddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserAddressDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> user_address t1 <span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id <span class="token operator">AND</span> t1<span class="token punctuation">.</span>id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5)]))}const i=n(p,[["render",o],["__file","join.html.vue"]]),r=JSON.parse('{"path":"/pages/core/lambda/join/join.html","title":"自定义关键词连接 join","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"以 full join 为例","slug":"以-full-join-为例","link":"#以-full-join-为例","children":[]}],"git":{"updatedTime":1723896089000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":1}]},"filePathRelative":"pages/core/lambda/join/join.md"}');export{i as comp,r as data};
