import{_ as t,c as l,j as i,a,G as e,a2 as p,B as h,o as k}from"./chunks/framework.CuCbyi2k.js";const m=JSON.parse('{"title":"IfExists","description":"","frontmatter":{},"headers":[],"relativePath":"pages/core/other/if-exists.md","filePath":"pages/core/other/if-exists.md","lastUpdated":1730203210000}'),r={name:"pages/core/other/if-exists.md"},E={id:"ifexists",tabindex:"-1"};function d(g,s,o,c,y,u){const n=h("Badge");return k(),l("div",null,[i("h1",E,[s[0]||(s[0]=a("IfExists ")),e(n,{type:"tip",text:"1.4.9+",vertical:"top"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#ifexists","aria-label":'Permalink to "IfExists <Badge type="tip" text="1.4.9+" vertical="top" />"'},"​",-1))]),s[3]||(s[3]=p(`<p>xxIfExists会自动判断条件值是否为空，且只会在不为空的情况下生效</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><ul><li>eq -&gt; eqIfExists</li><li>ne -&gt; neIfExists</li><li>gt -&gt; gtIfExists</li><li>ge -&gt; geIfExists</li><li>lt -&gt; ltIfExists</li><li>le -&gt; leIfExists</li><li>like -&gt; likeIfExists</li><li>notLike -&gt; notLikeIfExists</li><li>likeLeft -&gt; likeLeftIfExists</li><li>likeRight -&gt; likeRightIfExists</li><li>notLikeLeft -&gt; notLikeLeftIfExists</li><li>notLikeRight -&gt; notLikeRightIfExists</li></ul><div class="tip custom-block"><p class="custom-block-title">举例:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Objects.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nonNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name), UserDO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getName, name)</span></span></code></pre></div><p>等效于</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eqIfExists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserDO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getName, name)</span></span></code></pre></div></div><h2 id="判断策略" tabindex="-1">判断策略 <a class="header-anchor" href="#判断策略" aria-label="Permalink to &quot;判断策略&quot;">​</a></h2><h3 id="not-empty-默认" tabindex="-1"><strong>not_empty</strong> 默认 <a class="header-anchor" href="#not-empty-默认" aria-label="Permalink to &quot;**not_empty** 默认&quot;">​</a></h3><p>如果值类型为String则调用 <a href="https://github.com/yulichang/mybatis-plus-join/blob/master/mybatis-plus-join-core/src/main/java/com/github/yulichang/toolkit/StrUtils.java#L111" target="_blank" rel="noreferrer">StrUtils.isNotEmpty</a><br> 其他数据类型调用 Objects.nonNull</p><h3 id="not-null" tabindex="-1"><strong>not_null</strong> <a class="header-anchor" href="#not-null" aria-label="Permalink to &quot;**not_null**&quot;">​</a></h3><p>全部调用 Objects.nonNull</p><h3 id="not-blank" tabindex="-1"><strong>not_blank</strong> <a class="header-anchor" href="#not-blank" aria-label="Permalink to &quot;**not_blank**&quot;">​</a></h3><p>如果值类型为String则调用 <a href="https://github.com/yulichang/mybatis-plus-join/blob/master/mybatis-plus-join-core/src/main/java/com/github/yulichang/toolkit/StrUtils.java#L103" target="_blank" rel="noreferrer">StrUtils.isNotBlank</a><br> 其他数据类型调用 Objects.nonNull</p><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mybatis-plus-join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #xxIfExists判断策略 not_null/not_empty/not_blank</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  if-exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">not_empty</span></span></code></pre></div><p>自定义Wrapper策略</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//针对指定wrapper生效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setIfExists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//重载，enums参数用法同下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setIfExists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((val, enums) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val);</span></span></code></pre></div><p>自定义全局策略</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MybatisPlusConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 自定义ifExists策略 优先级高于配置文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 只对 xxIfExists生效 比如eqIfExists、neIfExists等</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MybatisPlusJoinIfExistsConsumer </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mybatisPlusJoinIfExistsConsumer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // val是条件值 enums是条件类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (val, enums) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>不同条件使用不同策略</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MybatisPlusConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MybatisPlusJoinIfExistsConsumer </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mybatisPlusJoinIfExistsConsumer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* val是条件值 enums是条件类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           以下代码解释 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           eqIfExists 判断条件为 Objects.nonNull</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           likeIfExists 判断条件为 NOT_BLANK</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           其他 xxIfExists 判断条件为 NOT_NULL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (val, enums) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (enums) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EQ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Objects.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nonNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LIKE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IfExistsEnum.NOT_BLANK.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                default:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IfExistsEnum.NOT_NULL.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,19))])}const f=t(r,[["render",d]]);export{m as __pageData,f as default};
