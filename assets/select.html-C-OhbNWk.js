import{_ as t,c as p,d as n,a,e as c,b as l,o,r as i}from"./app-Blaxpn9z.js";const u={},r={id:"字段过滤-selectfilter",tabindex:"-1"},d={class:"header-anchor",href:"#字段过滤-selectfilter"};function k(m,s){const e=i("Badge");return o(),p("div",null,[s[1]||(s[1]=n(`<h1 id="select" tabindex="-1"><a class="header-anchor" href="#select"><span>select</span></a></h1><p>查询指定字段, user的id字段</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自定义字符串查询</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;t.id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;t.id as &#39;pid&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;t.id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;t.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持可变参数</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getSex</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7)),a("h1",r,[a("a",d,[a("span",null,[s[0]||(s[0]=c("字段过滤 selectFilter ")),l(e,{type:"tip",text:"1.4.4.1+",vertical:"top"})])])]),s[2]||(s[2]=n(`<p>只要 java 字段名以 &quot;test&quot; 开头的</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token punctuation">.</span><span class="token function">selectFilter</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">getColumProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>只要 数据库 字段名以 &quot;test&quot; 开头的</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token punctuation">.</span><span class="token function">selectFilter</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>只要 java 字段类型是String的</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token punctuation">.</span><span class="token function">selectFilter</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getColumnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,6))])}const g=t(u,[["render",k],["__file","select.html.vue"]]),h=JSON.parse('{"path":"/pages/core/lambda/select/select.html","title":"select","lang":"en-US","frontmatter":{"tags":["selectFilter"]},"headers":[],"git":{"updatedTime":1724150898000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":2}]},"filePathRelative":"pages/core/lambda/select/select.md"}');export{g as comp,h as data};
