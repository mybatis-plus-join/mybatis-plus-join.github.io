import{_ as i,c as u,a as n,e as a,b as p,d as t,w as l,r as c,o as r}from"./app-BkHcBshn.js";const d={},k={id:"updatejoin",tabindex:"-1"},v={class:"header-anchor",href:"#updatejoin"},m={class:"custom-container warning"},b={class:"custom-container warning"},g={class:"custom-container warning"};function w(y,s){const o=c("Badge"),e=c("RouteLink");return r(),u("div",null,[s[13]||(s[13]=n("h1",{id:"连表更新",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#连表更新"},[n("span",null,"连表更新")])],-1)),n("h2",k,[n("a",v,[n("span",null,[s[0]||(s[0]=a("updateJoin ")),p(o,{type:"tip",text:"1.4.5+",vertical:"top"})])])]),s[14]||(s[14]=t(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 根据 whereEntity 条件，更新记录</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">entity</span>  实体对象 (set 条件值,可以为 null)</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">wrapper</span> 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">updateJoin</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">,</span><span class="token class-name">MPJBaseJoin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wrapper设置set语句和where条件" tabindex="-1"><a class="header-anchor" href="#wrapper设置set语句和where条件"><span>wrapper设置set语句和where条件</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 手动set条件</span>
<span class="line">     * 更新 user表name字段和address表address字段</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">UpdateJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> update <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> <span class="token string">&quot;aaaaaa&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getAddress</span><span class="token punctuation">,</span> <span class="token string">&quot;bbbbb&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updateJoin</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">UPDATE</span></span>
<span class="line">    <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> t</span>
<span class="line">    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> address t1</span>
<span class="line"><span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">SET</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token operator">=</span>?<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>address<span class="token operator">=</span>?</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> ?<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据实体更新-wrapper作为where条件" tabindex="-1"><a class="header-anchor" href="#根据实体更新-wrapper作为where条件"><span>根据实体更新, wrapper作为where条件</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 根据实体更新, wrapper作为where条件</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//主表实体 用于生成 set 语句</span></span>
<span class="line">        <span class="token class-name">UserDO</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">UpdateJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> update <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updateJoin</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">UPDATE</span></span>
<span class="line">    <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> t</span>
<span class="line">    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> address t1</span>
<span class="line"><span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">SET</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token operator">=</span>?<span class="token punctuation">,</span> t<span class="token punctuation">.</span>update_by<span class="token operator">=</span>?</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> ?<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),n("div",m,[s[4]||(s[4]=n("p",{class:"custom-container-title"},"注意事项:",-1)),n("p",null,[s[2]||(s[2]=a("实体类只更新非空字段, 如果要更新全部字段(非空字段和空字段)")),s[3]||(s[3]=n("br",null,null,-1)),p(e,{to:"/pages/core/api/updateJoinAndNull.html"},{default:l(()=>s[1]||(s[1]=[a("参考"),n("strong",null,"updateJoinAndNull",-1),a("方法")])),_:1})])]),s[15]||(s[15]=t(`<h2 id="主表根据实体更新-副表手动设置set语句" tabindex="-1"><a class="header-anchor" href="#主表根据实体更新-副表手动设置set语句"><span>主表根据实体更新, 副表手动设置set语句</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 根据实体更新, wrapper作为where条件</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//主表实体 用于生成 set 语句</span></span>
<span class="line">        <span class="token class-name">UserDO</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">UpdateJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> update <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//设置副表 set 语句</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getAddress</span><span class="token punctuation">,</span> <span class="token string">&quot;bbbbb&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updateJoin</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">UPDATE</span></span>
<span class="line">    <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> t</span>
<span class="line">    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> address t1</span>
<span class="line"><span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">SET</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token operator">=</span>?<span class="token punctuation">,</span> t<span class="token punctuation">.</span>update_by<span class="token operator">=</span>?<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>address<span class="token operator">=</span>?</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> ?<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),n("div",b,[s[8]||(s[8]=n("p",{class:"custom-container-title"},"注意事项:",-1)),n("p",null,[s[6]||(s[6]=a("实体类只更新非空字段, 如果要更新全部字段(非空字段和空字段)")),s[7]||(s[7]=n("br",null,null,-1)),p(e,{to:"/pages/core/api/updateJoinAndNull.html"},{default:l(()=>s[5]||(s[5]=[a("参考"),n("strong",null,"updateJoinAndNull",-1),a("方法")])),_:1})])]),s[16]||(s[16]=t(`<h2 id="根据主表和副表实体类更新-wrapper作为where条件" tabindex="-1"><a class="header-anchor" href="#根据主表和副表实体类更新-wrapper作为where条件"><span>根据主表和副表实体类更新, wrapper作为where条件</span></a></h2><p>这里提两个方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//更新实体非空字段</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">setUpdateEntity</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> entityList<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//更新实体空字段和非空字段</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">setUpdateEntityAndNull</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> entityList<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MpJoinTest</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Resource</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 场景: </span>
<span class="line">     * 三表联查并且按照实体更新这三张表</span>
<span class="line">     * 主表 user 副表 address 和 area</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//主表类 用于生成 set 语句</span></span>
<span class="line">        <span class="token class-name">UserDO</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//两个关联表 用于生成 set 语句</span></span>
<span class="line">        <span class="token class-name">AddressDO</span> address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AddressDO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTel</span><span class="token punctuation">(</span><span class="token string">&quot;119&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;人民广场&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">AreaDO</span> area <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AreaDO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setProvince</span><span class="token punctuation">(</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCity</span><span class="token punctuation">(</span><span class="token string">&quot;北京!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">UpdateJoinWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> update <span class="token operator">=</span> <span class="token class-name">JoinWrappers</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//设置两个副表的 set 语句</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">setUpdateEntity</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> area<span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//address和area 两张表空字段和非空字段一起更新 可以改成如下setUpdateEntityAndNull</span></span>
<span class="line">                <span class="token comment">//.setUpdateEntityAndNull(address, area)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AddressDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">AreaDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AreaDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">AddressDO</span><span class="token operator">::</span><span class="token function">getAreaId</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> i <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updateJoin</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应sql</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">UPDATE</span></span>
<span class="line">    <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> t</span>
<span class="line">    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> address t1</span>
<span class="line"><span class="token keyword">ON</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>user_id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> area t2 <span class="token keyword">ON</span> <span class="token punctuation">(</span>t2<span class="token punctuation">.</span>id <span class="token operator">=</span> t1<span class="token punctuation">.</span>area_id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">SET</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token operator">=</span>?<span class="token punctuation">,</span> t<span class="token punctuation">.</span>update_by<span class="token operator">=</span>?<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>tel<span class="token operator">=</span>?<span class="token punctuation">,</span> t1<span class="token punctuation">.</span>address<span class="token operator">=</span>?<span class="token punctuation">,</span> t2<span class="token punctuation">.</span>province<span class="token operator">=</span>?<span class="token punctuation">,</span> t2<span class="token punctuation">.</span>city<span class="token operator">=</span>?</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>id <span class="token operator">=</span> ?<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),n("div",g,[s[12]||(s[12]=n("p",{class:"custom-container-title"},"注意事项:",-1)),n("p",null,[s[10]||(s[10]=a("实体类只更新非空字段, 如果要更新全部字段(非空字段和空字段)")),s[11]||(s[11]=n("br",null,null,-1)),p(e,{to:"/pages/core/api/updateJoinAndNull.html"},{default:l(()=>s[9]||(s[9]=[a("参考"),n("strong",null,"updateJoinAndNull",-1),a("方法")])),_:1})])])])}const h=i(d,[["render",w],["__file","updateJoin.html.vue"]]),O=JSON.parse('{"path":"/pages/core/api/updateJoin.html","title":"连表更新","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"updateJoin","slug":"updatejoin","link":"#updatejoin","children":[]},{"level":2,"title":"wrapper设置set语句和where条件","slug":"wrapper设置set语句和where条件","link":"#wrapper设置set语句和where条件","children":[]},{"level":2,"title":"根据实体更新, wrapper作为where条件","slug":"根据实体更新-wrapper作为where条件","link":"#根据实体更新-wrapper作为where条件","children":[]},{"level":2,"title":"主表根据实体更新, 副表手动设置set语句","slug":"主表根据实体更新-副表手动设置set语句","link":"#主表根据实体更新-副表手动设置set语句","children":[]},{"level":2,"title":"根据主表和副表实体类更新, wrapper作为where条件","slug":"根据主表和副表实体类更新-wrapper作为where条件","link":"#根据主表和副表实体类更新-wrapper作为where条件","children":[]}],"git":{"updatedTime":1724150898000,"contributors":[{"name":"yulichang","email":"570810310@qq.com","commits":2}]},"filePathRelative":"pages/core/api/updateJoin.md"}');export{h as comp,O as data};
